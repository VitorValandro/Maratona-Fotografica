[{"C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\index.js":"1","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\reportWebVitals.js":"2","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\pages\\Landing\\Landing.js":"3","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\components\\Topbar\\Topbar.js":"4","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\routes.js":"5","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\pages\\AuthScreen\\AuthScreen.js":"6","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\components\\Photo\\Photo.js":"7","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\components\\PhotoUpload\\PhotoUpload.js":"8","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\services\\api.js":"9","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\pages\\Team\\Team.js":"10","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\services\\auth.js":"11","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\pages\\Dashboard\\Dashboard.js":"12","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\services\\downloads.js":"13","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\global\\global.js":"14","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\pages\\NotFound\\NotFound.js":"15"},{"size":552,"mtime":1610651286356,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1610066389857,"results":"18","hashOfConfig":"17"},{"size":1403,"mtime":1612784284857,"results":"19","hashOfConfig":"17"},{"size":2937,"mtime":1612636423513,"results":"20","hashOfConfig":"17"},{"size":728,"mtime":1612791736827,"results":"21","hashOfConfig":"17"},{"size":6495,"mtime":1612712187032,"results":"22","hashOfConfig":"17"},{"size":3492,"mtime":1612716649037,"results":"23","hashOfConfig":"17"},{"size":5948,"mtime":1613078343731,"results":"24","hashOfConfig":"17"},{"size":334,"mtime":1611747828202,"results":"25","hashOfConfig":"17"},{"size":8155,"mtime":1612792235994,"results":"26","hashOfConfig":"17"},{"size":855,"mtime":1612629742513,"results":"27","hashOfConfig":"17"},{"size":8782,"mtime":1612783531271,"results":"28","hashOfConfig":"17"},{"size":815,"mtime":1612464030188,"results":"29","hashOfConfig":"17"},{"size":244,"mtime":1612561086883,"results":"30","hashOfConfig":"17"},{"size":305,"mtime":1612792531002,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"19p4x12",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\index.js",[],["66","67"],"C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\reportWebVitals.js",[],"C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\pages\\Landing\\Landing.js",[],"C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\components\\Topbar\\Topbar.js",["68"],"import React, { useState } from \"react\";\r\n\r\nimport { FiArrowLeft, FiLogOut } from 'react-icons/fi';\r\nimport { MdCollections, MdGroup } from 'react-icons/md';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { isAuthenticated, logout, getTeamThatIsAuthenticated } from \"../../services/auth\";\r\n\r\nimport '../../global/global.css';\r\nimport \"./Topbar.css\";\r\nimport colors from \"../../global/global\";\r\n\r\nfunction Topbar({ goBackArrow=true, page='Landing' }) {\r\n  const history = useHistory();\r\n  \r\n  function handleLogOut(){  \r\n    logout();\r\n    history.push('/');\r\n  }\r\n  \r\n  return(\r\n    <main>\r\n      <div className=\"topbar-container\">\r\n        <nav>\r\n          {goBackArrow ? (\r\n            <Link to=\"/\" className=\"nav-arr nav-btn\">\r\n              <FiArrowLeft size={24} color=\"#58af9b\" />\r\n            </Link>\r\n          ): (\r\n            <button style={{opacity:0}}></button>\r\n          )}\r\n          {(isAuthenticated()) ? (\r\n            <Link to={`/team/${getTeamThatIsAuthenticated()}`} className=\"nav-btn\">\r\n              <span>TIME</span>\r\n            </Link>\r\n          ) : (\r\n              <button style={{ opacity: 0 }}></button>\r\n            )}\r\n          {(!isAuthenticated())? (\r\n            <Link to=\"/auth\" className=\"nav-btn\">\r\n              <span>INSCREVER-SE</span>\r\n            </Link>\r\n          ): (\r\n            <button style={{ opacity: 0}}></button>\r\n          )}\r\n          {(isAuthenticated()) ? (\r\n            <button type=\"button\" className=\"nav-btn\" onClick={handleLogOut}>\r\n              <FiLogOut size={24} color=\"#58af9b\" />\r\n            </button>\r\n            ) : (\r\n              <button style={{ opacity: 0 }}></button>\r\n            )\r\n          }\r\n        </nav>\r\n      </div>\r\n      <div className=\"bottomBarContainer\">\r\n        {(!isAuthenticated()) ? (\r\n          <Link to=\"/auth\" className=\"bottomBarCenterItem\">\r\n            <span>INSCREVER-SE</span>\r\n          </Link>\r\n        ) : (\r\n            null\r\n          )}\r\n        {(isAuthenticated()) && page !== 'Auth' ? (\r\n          <Link \r\n            to=\"/\" \r\n            className={`bottomBarLeftItem ${page === 'Landing' ? 'bottomBarItemOnFocus' : ''}`}\r\n          >\r\n            <MdCollections size={30} color={colors.neutralGreen} />\r\n          </Link>\r\n          ) : (null)\r\n        }\r\n        {(isAuthenticated()) && page !== 'Auth' ? (\r\n          <Link \r\n            to={`/team/${getTeamThatIsAuthenticated()}`} \r\n            className={`bottomBarRightItem ${page === 'Team' ? 'bottomBarItemOnFocus' : ''}`}\r\n          >\r\n            <MdGroup size={30} color={colors.neutralGreen} />\r\n          </Link>\r\n          ) : (null)\r\n        }\r\n        {page === 'Auth' ? (\r\n          <Link to=\"/\" className=\"bottomBarCenterItem\">\r\n            <FiArrowLeft size={24} color=\"#58af9b\" />\r\n          </Link>\r\n        ) : (null)\r\n        }\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Topbar;","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\routes.js",[],"C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\pages\\AuthScreen\\AuthScreen.js",[],"C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\components\\Photo\\Photo.js",["69"],"import React, { useEffect, useState } from 'react';\r\nimport { FiX } from 'react-icons/fi';\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\n\r\nimport '../../global/global.css';\r\nimport './Photo.css';\r\nimport api from '../../services/api';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst apiUrl = \"http://localhost:3333\";\r\n\r\nfunction Photo({photo}){\r\n  const [modal, setModal] = useState('none');\r\n  const [subthemeName, setSubthemeName] = useState('');\r\n  const [teamName, setTeamName] = useState('');\r\n  const [photoInfoIsLoading, setPhotoInfoIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getPhotoAssociationsInfo();\r\n  }, []);\r\n\r\n  async function getPhotoAssociationsInfo(){\r\n    let infoLoaded = 0;\r\n    await api.get(`/themes/subthemes`)\r\n      .then((response) => {\r\n        const subthemeObject = response.data.filter((subtheme) => {\r\n          infoLoaded++;\r\n          return subtheme.id === photo.subthemeId;\r\n        });\r\n        setSubthemeName(subthemeObject[0].title);\r\n      })\r\n      .catch(err => console.log(err));\r\n    \r\n    await api.get(`/teams`)\r\n      .then((response) => {\r\n        const teamObject = response.data.filter((team) => {\r\n          infoLoaded++;\r\n          return team.id === photo.teamId;\r\n        });\r\n        setTeamName(teamObject[0].name);\r\n      })\r\n      .catch(err => console.log(err));\r\n    infoLoaded >= 2 && setPhotoInfoIsLoading(false);\r\n    return;\r\n  }\r\n\r\n  function handleModal(){\r\n    modal === 'none' ? setModal('flex') : setModal('none');\r\n  }\r\n\r\n  function convertTimestampToDate(timestamp){\r\n    const date = new Date(timestamp);\r\n    const hours = date.getHours() < 10 ? \"0\"+date.getHours() : date.getHours();\r\n    const minutes = date.getMinutes() < 10 ? \"0\"+date.getMinutes() : date.getMinutes();\r\n\r\n    return `${hours}:${minutes} - ${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <div className=\"photoContainer\">\r\n      {photoInfoIsLoading ? (\r\n        <SkeletonTheme color=\"]#ececec\" highlightColor=\"#ecf0f1\">\r\n          <Skeleton width={\"30%\"}/>\r\n          <Skeleton width={\"100%\"}/>\r\n          <Skeleton height={375}/>\r\n        </SkeletonTheme>\r\n      ) : (\r\n        <>\r\n        <div className=\"photoHeader\">\r\n          <Link to={`/team/${photo.teamId}`} className=\"teamLink\">\r\n            <span>{teamName}</span>\r\n          </Link>\r\n          <div>\r\n            <span className=\"postHour\">{convertTimestampToDate(photo.createdAt)}</span>\r\n            <span className=\"themeName\">{subthemeName}</span>\r\n          </div>\r\n        </div >\r\n        <img alt=\"Fotografia do time\" className=\"photoImg\" src={`${apiUrl}/uploadedPhotos/${photo.filename}`} onClick={handleModal}></img>\r\n        <div className=\"photoModal\" style={{display:modal}}>\r\n          <FiX size={40} color={\"#FFF\"} className=\"closeModal\" onClick={handleModal}/>\r\n          <div>\r\n            <button type=\"button\" className=\"teamLink\">\r\n              <Link to={`/team/${photo.teamId}`} className=\"teamLink\">\r\n                <span>{teamName}</span>\r\n              </Link>\r\n            </button>\r\n            <span className=\"themeName\">{subthemeName}</span>\r\n          </div>\r\n          <img alt=\"Fotografia do time\" className=\"modalImg\" src={`${apiUrl}/uploadedPhotos/${photo.filename}`}></img>\r\n          <span className=\"modalPostHour\">{convertTimestampToDate(photo.createdAt)}</span>\r\n        </div>\r\n        </>\r\n      )}\r\n      </div >\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Photo;","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\components\\PhotoUpload\\PhotoUpload.js",[],"C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\services\\api.js",[],"C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\pages\\Team\\Team.js",["70","71"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport Topbar from '../../components/Topbar/Topbar';\r\nimport Photo from '../../components/Photo/Photo';\r\nimport PhotoUpload from '../../components/PhotoUpload/PhotoUpload';\r\n\r\nimport { FiUser, FiPlus, FiArrowRight } from 'react-icons/fi';\r\nimport { MdRemoveCircle } from 'react-icons/md';\r\nimport Skeleton, {SkeletonTheme} from 'react-loading-skeleton';\r\n\r\nimport '../../global/global.css';\r\nimport './Team.css';\r\n\r\nimport api from '../../services/api';\r\nimport { getTeamThatIsAuthenticated, isAuthenticated } from \"../../services/auth\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nfunction Team() {\r\n  const [showAddMember, setShowAddMember] = useState(false);\r\n  const [memberName, setMemberName] = useState('');\r\n  const [memberRegister, setMemberRegister] = useState('');\r\n  const [validationMsg, setValidationMsg] = useState('');\r\n  const [membersArray, setMembersArray] = useState([]);\r\n  const [photosArray, setPhotosArray] = useState([]);\r\n  const [teamInfo, setTeamInfo] = useState({});\r\n  const [memberListIsLoading, setMemberListIsLoading] = useState(true);\r\n\r\n  const history = useHistory();\r\n  const { teamId } = useParams();\r\n\r\n  useEffect(() => {\r\n    getMembersList();\r\n  }, [validationMsg]);\r\n\r\n  useEffect(() => {\r\n    getTeamPhotos();\r\n    getTeamInfo();\r\n    getMembersList();\r\n  }, [teamId]);\r\n\r\n  async function getMembersList(){\r\n    await api.get(`/teams/${teamId}/members`)\r\n      .then((response) => {\r\n        setMembersArray(response.data);\r\n        setMemberListIsLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        history.push('/*');\r\n      });\r\n  }\r\n\r\n  async function getTeamInfo(){\r\n    await api.get(`/teams/${teamId}`)\r\n      .then((response) => {\r\n        setTeamInfo(response.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  async function handleMemberDelete(member){\r\n    await api.delete(`teams/${teamId}/members/${member.id}`)\r\n      .then(response => {\r\n        setValidationMsg('Success'); // essa atribuição é necessária para a tela reagir à mudança\r\n        setValidationMsg(''); // desatribui pra voltar ao normal\r\n      })\r\n      .catch(err => {console.log(err)});\r\n  }\r\n\r\n  async function getTeamPhotos() {\r\n    await api.get(`/photos/teams/${teamId}`)\r\n      .then((response) => {\r\n        setPhotosArray(response.data);\r\n      })\r\n      .catch(err => console.log(err))\r\n  } \r\n\r\n  function handleMemberSubmit(event){\r\n    event.preventDefault();\r\n    const nameRegex = /^[A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ'\\s]+$/;\r\n    const registerRegex = /^\\d+$/;\r\n\r\n    if(!nameRegex.test(memberName) || !memberName.trim()){\r\n      setValidationMsg('O nome não deve conter números ou caracteres especiais (além do espaço)')\r\n      return;\r\n    }\r\n\r\n    if(!registerRegex.test(memberRegister)){\r\n      setValidationMsg('A matrícula deve ser composta apenas por números')\r\n      return;\r\n    }\r\n\r\n    api.post(`/teams/${teamId}/members`, { \r\n        'name':memberName, \r\n        'registration':memberRegister \r\n      })\r\n      .then((response) => {\r\n        setValidationMsg('Membro inscrito com sucesso!');\r\n      })\r\n      .catch((err) => {\r\n        setValidationMsg('Um erro ocorreu ao inscrever membro')\r\n        console.log(err);\r\n      })\r\n\r\n    setValidationMsg('');\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <Topbar page={'Team'} />\r\n      <div className=\"teamContent\">\r\n        <div className = \"teamInfoContainer\">\r\n          <div className = \"infoContainer\">\r\n            {memberListIsLoading ? (\r\n            <SkeletonTheme color = \"#ececec\" highlightColor = \"#ecf0f1\" >\r\n              <Skeleton width={\"50%\"} height={20}/>\r\n              <Skeleton width={\"75%\"} height={15}/>\r\n              <Skeleton width={\"100%\"} height={80}/>\r\n            </SkeletonTheme>\r\n            ) : (\r\n            <>\r\n              <span className = \"teamName\">{teamInfo.name}</span>\r\n              <span className=\"memberPresentation\">Membros</span>\r\n              <ul className=\"teamMembers\">\r\n                {membersArray.length !== 0 ? (\r\n                  membersArray.map(member => {\r\n                    return (\r\n                      <li key={member.id} className=\"memberInfo\">\r\n                        <div>\r\n                          <FiUser size={24} color='#58af9b' />\r\n                          <span className=\"memberName\">{member.name}</span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"memberRegister\">{member.registration}</span>\r\n                          {(isAuthenticated() && teamId === getTeamThatIsAuthenticated()) ? (\r\n                            <MdRemoveCircle\r\n                              onClick={() => { handleMemberDelete(member) }}\r\n                              size={24}\r\n                              color=\"#e57878\"\r\n                              style={{ marginLeft: '5px', cursor: 'pointer' }}\r\n                            />\r\n                          ) : (<span></span>)}\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  })\r\n                ) : (\r\n                    <li className=\"memberPresentation memberInfo\">\r\n                      <div className=\"nullAlert\">Ainda não há membros inscritos nesse time</div>\r\n                    </li>\r\n                  )}\r\n              </ul>\r\n            </>\r\n            )}\r\n          </div>\r\n          {(isAuthenticated() && teamId === getTeamThatIsAuthenticated()) ? (\r\n            <div className=\"btnDiv\">\r\n              {!showAddMember ? (\r\n                <button className=\"addMemberBtn\" onClick={() => { setShowAddMember(true) }}><FiPlus size={24} color='#58af9b' /></button>\r\n              ) : (\r\n                <form onSubmit={handleMemberSubmit} className=\"addMemberForm\">\r\n                  <span>Insira os dados para inscrever um novo membro</span>\r\n                  <fieldset>\r\n                    <div className=\"addMemberInputBlock\">\r\n                      <label htmlFor=\"name\">Nome</label>\r\n                      <input\r\n                        value={memberName}\r\n                        type=\"text\"\r\n                        onChange={e => { setMemberName(e.target.value) }}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"addMemberInputBlock\">\r\n                      <label htmlFor=\"registration\">Matrícula</label>\r\n                      <input\r\n                        value={memberRegister}\r\n                        onChange={e => { setMemberRegister(e.target.value) }}\r\n                        minLength=\"10\"\r\n                        maxLength=\"10\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </fieldset>\r\n                  {validationMsg !== '' ? (\r\n                    <div className=\"validationContainer\">\r\n                      <p className=\"validationMessage\">{validationMsg}</p>\r\n                    </div>\r\n                  ) : (null)\r\n                  }\r\n                  <button type=\"submit\" className=\"addMemberBtn\" style={{ border: '2px dashed #ececec', marginTop: '10px' }}>\r\n                    <FiArrowRight size={24} color='#58af9b' />\r\n                  </button>\r\n                </form>\r\n              )}\r\n            </div>\r\n          ) : (null)}\r\n        </div>\r\n        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', minWidth:'80%'}}>\r\n          <div className=\"teamPhotosContainer\">\r\n            {(isAuthenticated() && teamId === getTeamThatIsAuthenticated()) ? (\r\n              <PhotoUpload />\r\n              ): (<span></span>)\r\n            }\r\n            {photosArray.length !== 0 ? (\r\n              photosArray.map(photo => {\r\n              return (\r\n                <Photo key={photo.id} photo={photo} />\r\n              )\r\n              })\r\n            ) : (<div className=\"nullAlert\">Esse grupo ainda não tem fotos</div>)\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Team;","C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\services\\auth.js",[],"C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\pages\\Dashboard\\Dashboard.js",[],"C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\services\\downloads.js",[],"C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\global\\global.js",[],"C:\\Users\\vitor\\Desktop\\prototype\\web\\src\\pages\\NotFound\\NotFound.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":20,"column":6,"nodeType":"82","endLine":20,"endColumn":8,"suggestions":"83"},{"ruleId":"80","severity":1,"message":"84","line":33,"column":6,"nodeType":"82","endLine":33,"endColumn":21,"suggestions":"85"},{"ruleId":"80","severity":1,"message":"86","line":39,"column":6,"nodeType":"82","endLine":39,"endColumn":14,"suggestions":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPhotoAssociationsInfo'. Either include it or remove the dependency array.","ArrayExpression",["90"],"React Hook useEffect has a missing dependency: 'getMembersList'. Either include it or remove the dependency array.",["91"],"React Hook useEffect has missing dependencies: 'getMembersList', 'getTeamInfo', and 'getTeamPhotos'. Either include them or remove the dependency array.",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [getPhotoAssociationsInfo]",{"range":"99","text":"100"},"Update the dependencies array to be: [getMembersList, validationMsg]",{"range":"101","text":"102"},"Update the dependencies array to be: [getMembersList, getTeamInfo, getTeamPhotos, teamId]",{"range":"103","text":"104"},[656,658],"[getPhotoAssociationsInfo]",[1264,1279],"[getMembersList, validationMsg]",[1376,1384],"[getMembersList, getTeamInfo, getTeamPhotos, teamId]"]